{
	"info": {
		"_postman_id": "10318013-8bda-4146-bdaf-91f7853e915f",
		"name": "My_API_Test_Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27445637",
		"_collection_link": "https://planetary-astronaut-292449.postman.co/workspace/API-Testing-Sandbox~130d14ef-9117-44f5-81b1-209037b7abf8/collection/27445637-10318013-8bda-4146-bdaf-91f7853e915f?action=share&source=collection_link&creator=27445637"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "TC_GET_001",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Schema for required fields - userId, id, title, and body\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('array');\r",
									"    responseData.forEach(function(post) {\r",
									"        pm.expect(post).to.have.property('userId').that.is.a('number');\r",
									"        pm.expect(post).to.have.property('id').that.is.a('number');\r",
									"        pm.expect(post).to.have.property('title').that.is.a('string');\r",
									"        pm.expect(post).to.have.property('body').that.is.a('string');\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_GET_002",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts/9999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								"9999"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_GET_003",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_GET_004",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts?id=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_GET_005",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"console.log(pm.response.json());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts/abc",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								"abc"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_GET_006",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"console.log(pm.response.json());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/-1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_GET_007",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"console.log(pm.response.json());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/ ",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								" "
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_GET_008",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com//posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"",
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_GET_009",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Custom-Header",
								"value": "TestHeaderValue",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_GET_010",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POST",
			"item": [
				{
					"name": "TC_POST_001",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Akshay's First Post\",\r\n  \"body\": \"Learning API testing with POST method.\",\r\n  \"userId\": 101\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_POST_002",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response has the required fields - body, userId, and id\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.body).to.exist;\r",
									"    pm.expect(responseData.userId).to.exist;\r",
									"    pm.expect(responseData.id).to.exist;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Body is a non-empty string\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData.body).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Body should not be empty\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"UserId is a non-negative integer\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData.userId).to.be.a('number');\r",
									"    pm.expect(responseData.userId).to.be.at.least(0);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"console.log(\"Response time: \" + pm.response.responseTime + \"ms\");\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"body\": \r\n     \"Body text\", \r\n     \"userId\": 1 \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_POST_003",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n\"title\": \"Title\", \r\n\"userId\": 1 \r\n }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_POST_004",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n    \"title\": \"Title\", \r\n    \"body\": \"Content\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_POST_005",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n    \"title\": \"\", \r\n    \"body\": \"\", \r\n    \"userId\": \"\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_POST_006",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n    \"title\": \"Test\", \r\n    \"body\": \"Something\", \r\n    \"userId\": \"abc\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_POST_007",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"title\": \"Test\", \"body\": \"Content\", \"userId\": 1, \"likes\": 100 }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_POST_008",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_POST_009",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"title\": \"<1000 chars>\", \"body\": \"<5000 chars>\", \"userId\": 1 }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_POST_010",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PUT",
			"item": [
				{
					"name": "TC_PUT_001",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n\"id\": 1, \r\n\"title\": \"Updated Title\",\r\n\"body\": \"Updated Body\", \r\n\"userId\": 1 \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/:id",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_PUT_002",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"id\": 1, \"body\": \"Only body updated\", \"userId\": 1 }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_PUT_003",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"title\": \"Only Title\",\r\n    \"userId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_PUT_004",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"title\": \"Updated Title\",\r\n    \"body\": \"Updated Body\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_PUT_005",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"id\": 2, \"title\": \"Mismatch\", \"body\": \"Testing\", \"userId\": 1 }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_PUT_006",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 9999,\r\n  \"title\": \"Test update on non-existing post\",\r\n  \"body\": \"Trying to PUT a post that doesn't exist\",\r\n  \"userId\": 1\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/9999",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"9999"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_PUT_007",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"id\": 1, \"title\": \"\", \"body\": \"\", \"userId\": \"\" }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_PUT_008",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_PUT_009",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_PUT_010",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"title\": \"What is a PUT Request? Purpose: Used to update an entire resource. Difference from PATCH: PUT replaces the entire object, while PATCH updates only specific fields.\",\r\n    \"body\": \"What is a PUT Request? Purpose: Used to update an entire resource. Difference from PATCH: PUT replaces the entire object, while PATCH updates only specific fields.\",\r\n    \"userId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_PUT_011",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_PUT_012",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PATCH",
			"item": [
				{
					"name": "TC_PATCH_001",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"title\": \"Updated title\" }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_PATCH_002",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_PATCH_003",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_PATCH_004",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"title\": \"New title\", \"body\": \"New body content\" }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_PATCH_005",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_PATCH_006",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"title\": \"Should fail\" }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/9999",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"9999"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_PATCH_007",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"title\": \"Partial update\", \"newField\": \"unexpected\" }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_PATCH_008",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_PATCH_009",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_PATCH_010",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "TC_DELETE_001",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_DELETE_002",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/10",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"10"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_DELETE_003",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/9999",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"9999"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_DELETE_004",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_DELETE_005",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/-1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_DELETE_006",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_DELETE_007",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com//posts //1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"",
								"posts ",
								"",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_DELETE_008",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"force\": true }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_DELETE_009",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"<style type=\"text/css\">\r",
									"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
									"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
									"    .tftable tr {background-color:#ffffff;}\r",
									"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
									"    .tftable tr:hover {background-color:#e0ffff;}\r",
									"</style>\r",
									"\r",
									"<table class=\"tftable\" border=\"1\">\r",
									"    <tr>\r",
									"        <th>Response</th>\r",
									"    </tr>\r",
									"    <tr>\r",
									"        <td>{{response}}</td>\r",
									"    </tr>\r",
									"</table>\r",
									"`;\r",
									"\r",
									"function constructVisualizerPayload() {\r",
									"    return {response: JSON.stringify(pm.response.json())};\r",
									"}\r",
									"\r",
									"pm.visualizer.set(template, constructVisualizerPayload());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/abc",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"abc"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_DELETE_010",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}